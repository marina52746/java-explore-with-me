DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  UNIQUE(email)
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  UNIQUE(name)
);

CREATE TABLE IF NOT EXISTS locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(256),
    lat REAL,
    lon REAL
);

CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  users_id BIGINT NOT NULL,
  annotation VARCHAR(2000),
  confirmed_requests INTEGER,
  created_on TIMESTAMP,
  categories_id BIGINT NOT NULL,
  description VARCHAR(7000) NOT NULL,
  eventdate TIMESTAMP,
  locations_id BIGINT NOT NULL,
  paid BOOLEAN,
  participantlimit INTEGER,
  published_on TIMESTAMP,
  requestmoderation BOOLEAN,
  state VARCHAR(32) NOT NULL,
  title VARCHAR(120),
  views BIGINT,
  CONSTRAINT fk_events_to_users FOREIGN KEY(users_id)  REFERENCES users (id) ON DELETE CASCADE,
  CONSTRAINT fk_events_to_categories FOREIGN KEY(categories_id)  REFERENCES categories (id),
  CONSTRAINT fk_events_to_locations FOREIGN KEY(locations_id)  REFERENCES locations (id)
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event BIGINT NOT NULL,
    requester BIGINT NOT NULL,
    status VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    events VARCHAR,
    pinned BOOLEAN,
    title VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(500),
    users_id BIGINT NOT NULL,
    events_id BIGINT NOT NULL,
    created_on TIMESTAMP,
    CONSTRAINT fk_comments_to_users FOREIGN KEY(users_id)  REFERENCES users (id),
    CONSTRAINT fk_comments_to_events FOREIGN KEY(events_id)  REFERENCES events (id) ON DELETE CASCADE
);